"""
Django settings for claims_manager project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'nr%!ddmdqq4w54ctbtoe()na-il+3_*=omv5j_2e%amxfi_#*-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'oauth2_provider',
    'rest_framework',
    'claim',
    'department',
    'request',
    'notification'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'claims_manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'claims_manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'claims_manager',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211'
    }
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATICFILES_DIRS = ('/docs/',)
STATIC_URL = '/docs/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '20/min',
        'user': '20/min'
    }

}

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'}
}


API_ERRORS = {
    'EMPLOYEE_PERMISSION_ERROR' : 'You don\'t have permission on this claim',
    'MANAGER_PERMISSION_ERROR': 'You don\'t have permisssion to act on this claim',
    'CLAIM_NOT_AVAILABLE': 'Requested claim not available',
    'REQUEST_NOT_AVAILABLE': 'Requested resource is not available',
    'CLAIM_APPROVED': 'Claim has been approved and moved to finance team',
    'CLAIM_INTIATED': 'Claim has been submitted',
    'CLAIM_REJECTED': 'Claim has been rejected by department manager',
    'CLAIM_REJECTED_BY_FINANCE': 'Claim has been rejected by finance manager',
    'CLAIM_SETTLED': 'Claim has been settled',
    'CLAIM_IN_PROCESS_ERROR': 'Requested claim can not be modified',
    'TEAM_ALREADY_HAVE_A_MANAGER': 'Selected team already have a manger',
    'CLAIM_APPROVED_BY_FINANCE': 'Claim has been approved by finance team',
    'AMOUNT_APPROVED_NOT_AVAILABLE': '\'amount_approved\' should be posted',
    'MANAGER_PERMISSION_ERROR_ON_REQUEST': 'You don\'t have permisssion to act on this resource request',
    'SUB_REQUESTS_CREATED': 'Sub requests are created at concern departments',
    'REQUEST_APPROVED': 'Resource request has been approved',
    'REQUEST_REJECTED': 'Resource request has been rejected',
}

CLAIM_STATE = {
    'DRAFT': 0,
    'INTIATED' : 1,
    'MOVED_TO_FINANCE': 2,
    'REJECTED': 3,
    'SETTLED':4,
    'REJECTED_BY_FINANCE':5
}

REQUEST_STATE = {
    'DRAFT': 0,
    'INTIATED' : 1,
    'APPROVED': 2,
    'REJECTED': 3,
}

ROLES = {
    'MANAGER': 1,
    'EMPLOYEE': 2
}

DEPARTMENT = {
    'FINANCE': 3,
    'FACILITIES': 4,
    'SYSADMIN': 5
}
